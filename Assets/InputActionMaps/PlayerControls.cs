//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputActionMaps/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Ground"",
            ""id"": ""7652f16a-bd04-4ffd-a375-c12e7a8d8894"",
            ""actions"": [
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""89a5a389-1c01-4d05-956a-b68cf8d27bc1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Intract"",
                    ""type"": ""Button"",
                    ""id"": ""65a401e6-43a7-4a84-aaae-262e04706219"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""PassThrough"",
                    ""id"": ""53d3cbb5-f9ad-43ac-a778-e9b9993beea7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2223d639-5657-4aa2-8ac6-07377e44c649"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseLook"",
                    ""type"": ""Value"",
                    ""id"": ""fa62fb5e-1d0b-4f80-9867-98b3acef66bc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchToPrimaryGun"",
                    ""type"": ""Button"",
                    ""id"": ""c545767a-b78f-4010-abd1-8264e502e2a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToSecondaryGun"",
                    ""type"": ""Button"",
                    ""id"": ""ea41cf97-6d8c-4256-8563-3f4bced009ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToGrenadeOrNextGrenade"",
                    ""type"": ""Button"",
                    ""id"": ""fc1063ec-7d97-42cb-8816-12e074500af2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""af4f250d-2c92-4b58-b622-9aefbc0ff872"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e241d95e-64eb-4a91-8678-eeae766a0fd2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Intract"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b50ed5d-2247-4bb2-b195-3e9ace1d801a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""728363f3-2832-4318-ba0a-0003b31a739e"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""4b04e8c2-2808-4f32-a214-59fe3eb307c3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0197d248-e273-44b0-84bd-ea603050786d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""78193b32-9b21-446f-958a-147b577e4dd6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4e282d93-3cd1-4eff-902a-dc850105e698"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b5d324f1-6f51-444d-8c92-6bed9f58eea4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""31e6253b-87e4-485b-a430-f8fdee3e46dc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""MouseLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""958c7c2b-5b34-4b69-9e0b-44f402eeaf9f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""SwitchToPrimaryGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d10b007-ef6b-4703-98c6-2b66aeb9b139"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""SwitchToSecondaryGun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""898b0b42-945a-458b-8ddb-42c6af44f590"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""SwitchToGrenadeOrNextGrenade"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenu"",
            ""id"": ""33d9cb54-6cfd-409c-b67e-0bfa857867f2"",
            ""actions"": [
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""9415fc0a-4a62-480e-b0e3-821d7f7cb206"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""de1cfa78-92c4-4507-b85a-9e31c18b31d5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""6f9dba3b-6fe5-492d-83e8-5baec6752160"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6b76d755-19d7-4f4a-9a20-d555d7a5ac25"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""593bca38-2ae8-4634-9552-c217da4dae61"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9ede7c6-6cda-4d06-b216-9c0d8e9a10cd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseAndKeyboard"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseAndKeyboard"",
            ""bindingGroup"": ""MouseAndKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Ground
        m_Ground = asset.FindActionMap("Ground", throwIfNotFound: true);
        m_Ground_Fire = m_Ground.FindAction("Fire", throwIfNotFound: true);
        m_Ground_Intract = m_Ground.FindAction("Intract", throwIfNotFound: true);
        m_Ground_Jump = m_Ground.FindAction("Jump", throwIfNotFound: true);
        m_Ground_Movement = m_Ground.FindAction("Movement", throwIfNotFound: true);
        m_Ground_MouseLook = m_Ground.FindAction("MouseLook", throwIfNotFound: true);
        m_Ground_SwitchToPrimaryGun = m_Ground.FindAction("SwitchToPrimaryGun", throwIfNotFound: true);
        m_Ground_SwitchToSecondaryGun = m_Ground.FindAction("SwitchToSecondaryGun", throwIfNotFound: true);
        m_Ground_SwitchToGrenadeOrNextGrenade = m_Ground.FindAction("SwitchToGrenadeOrNextGrenade", throwIfNotFound: true);
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_MouseDelta = m_MainMenu.FindAction("MouseDelta", throwIfNotFound: true);
        m_MainMenu_MousePosition = m_MainMenu.FindAction("MousePosition", throwIfNotFound: true);
        m_MainMenu_LeftClick = m_MainMenu.FindAction("LeftClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ground
    private readonly InputActionMap m_Ground;
    private IGroundActions m_GroundActionsCallbackInterface;
    private readonly InputAction m_Ground_Fire;
    private readonly InputAction m_Ground_Intract;
    private readonly InputAction m_Ground_Jump;
    private readonly InputAction m_Ground_Movement;
    private readonly InputAction m_Ground_MouseLook;
    private readonly InputAction m_Ground_SwitchToPrimaryGun;
    private readonly InputAction m_Ground_SwitchToSecondaryGun;
    private readonly InputAction m_Ground_SwitchToGrenadeOrNextGrenade;
    public struct GroundActions
    {
        private @PlayerControls m_Wrapper;
        public GroundActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire => m_Wrapper.m_Ground_Fire;
        public InputAction @Intract => m_Wrapper.m_Ground_Intract;
        public InputAction @Jump => m_Wrapper.m_Ground_Jump;
        public InputAction @Movement => m_Wrapper.m_Ground_Movement;
        public InputAction @MouseLook => m_Wrapper.m_Ground_MouseLook;
        public InputAction @SwitchToPrimaryGun => m_Wrapper.m_Ground_SwitchToPrimaryGun;
        public InputAction @SwitchToSecondaryGun => m_Wrapper.m_Ground_SwitchToSecondaryGun;
        public InputAction @SwitchToGrenadeOrNextGrenade => m_Wrapper.m_Ground_SwitchToGrenadeOrNextGrenade;
        public InputActionMap Get() { return m_Wrapper.m_Ground; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundActions set) { return set.Get(); }
        public void SetCallbacks(IGroundActions instance)
        {
            if (m_Wrapper.m_GroundActionsCallbackInterface != null)
            {
                @Fire.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnFire;
                @Intract.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnIntract;
                @Intract.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnIntract;
                @Intract.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnIntract;
                @Jump.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMovement;
                @MouseLook.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMouseLook;
                @MouseLook.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMouseLook;
                @MouseLook.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMouseLook;
                @SwitchToPrimaryGun.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToPrimaryGun;
                @SwitchToPrimaryGun.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToPrimaryGun;
                @SwitchToPrimaryGun.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToPrimaryGun;
                @SwitchToSecondaryGun.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToSecondaryGun;
                @SwitchToSecondaryGun.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToSecondaryGun;
                @SwitchToSecondaryGun.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToSecondaryGun;
                @SwitchToGrenadeOrNextGrenade.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToGrenadeOrNextGrenade;
                @SwitchToGrenadeOrNextGrenade.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToGrenadeOrNextGrenade;
                @SwitchToGrenadeOrNextGrenade.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwitchToGrenadeOrNextGrenade;
            }
            m_Wrapper.m_GroundActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Intract.started += instance.OnIntract;
                @Intract.performed += instance.OnIntract;
                @Intract.canceled += instance.OnIntract;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MouseLook.started += instance.OnMouseLook;
                @MouseLook.performed += instance.OnMouseLook;
                @MouseLook.canceled += instance.OnMouseLook;
                @SwitchToPrimaryGun.started += instance.OnSwitchToPrimaryGun;
                @SwitchToPrimaryGun.performed += instance.OnSwitchToPrimaryGun;
                @SwitchToPrimaryGun.canceled += instance.OnSwitchToPrimaryGun;
                @SwitchToSecondaryGun.started += instance.OnSwitchToSecondaryGun;
                @SwitchToSecondaryGun.performed += instance.OnSwitchToSecondaryGun;
                @SwitchToSecondaryGun.canceled += instance.OnSwitchToSecondaryGun;
                @SwitchToGrenadeOrNextGrenade.started += instance.OnSwitchToGrenadeOrNextGrenade;
                @SwitchToGrenadeOrNextGrenade.performed += instance.OnSwitchToGrenadeOrNextGrenade;
                @SwitchToGrenadeOrNextGrenade.canceled += instance.OnSwitchToGrenadeOrNextGrenade;
            }
        }
    }
    public GroundActions @Ground => new GroundActions(this);

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private IMainMenuActions m_MainMenuActionsCallbackInterface;
    private readonly InputAction m_MainMenu_MouseDelta;
    private readonly InputAction m_MainMenu_MousePosition;
    private readonly InputAction m_MainMenu_LeftClick;
    public struct MainMenuActions
    {
        private @PlayerControls m_Wrapper;
        public MainMenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MouseDelta => m_Wrapper.m_MainMenu_MouseDelta;
        public InputAction @MousePosition => m_Wrapper.m_MainMenu_MousePosition;
        public InputAction @LeftClick => m_Wrapper.m_MainMenu_LeftClick;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void SetCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterface != null)
            {
                @MouseDelta.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouseDelta;
                @MouseDelta.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMouseDelta;
                @MousePosition.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMousePosition;
                @LeftClick.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnLeftClick;
            }
            m_Wrapper.m_MainMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
            }
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);
    private int m_MouseAndKeyboardSchemeIndex = -1;
    public InputControlScheme MouseAndKeyboardScheme
    {
        get
        {
            if (m_MouseAndKeyboardSchemeIndex == -1) m_MouseAndKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseAndKeyboard");
            return asset.controlSchemes[m_MouseAndKeyboardSchemeIndex];
        }
    }
    public interface IGroundActions
    {
        void OnFire(InputAction.CallbackContext context);
        void OnIntract(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseLook(InputAction.CallbackContext context);
        void OnSwitchToPrimaryGun(InputAction.CallbackContext context);
        void OnSwitchToSecondaryGun(InputAction.CallbackContext context);
        void OnSwitchToGrenadeOrNextGrenade(InputAction.CallbackContext context);
    }
    public interface IMainMenuActions
    {
        void OnMouseDelta(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
    }
}
